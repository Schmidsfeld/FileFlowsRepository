/**
 * This is a relatively fast 3d (temporal and spacial) denoise filter. It aims to reduce image noise, producing smooth images and making still images really still. It should enhance compressibility.
 * @author Alexander von Schmidsfeld
 * @revision 1
 * @minimumVersion 1.0.0.0
 * @param {int} Luma_spatial A non-negative floating point number which specifies spatial luma strength. It defaults to 4.0.
 * @param {int} Chroma_spacial A non-negative floating point number which specifies spatial chroma strength. It defaults to 3.0*luma_spatial/4.0.
 * @param {int} Luma_temp A floating point number which specifies luma temporal strength. It defaults to 6.0*luma_spatial/4.0.
 * @param {int} Chroma_temp A floating point number which specifies chroma temporal strength. It defaults to luma_tmp*chroma_spatial/luma_spatial.
 * @output Denoised Video 
 */

function Script(Luma_spatial,Chroma_spacial,Luma_temp,Chroma_temp)
{
  let ffmpeg = Variables.FfmpegBuilderModel;
  if(!ffmpeg)
  {
    Logger.ELog('FFMPEG Builder variable not found');
    return -1;
  }

  let video = ffmpeg.VideoStreams[0];
  if(!video)
  {
    Logger.ELog('FFMPEG Builder no video stream found');
    return -1;
  }
  
  Logger.ILog(`Denoising the Video using Non-Local Means algorithm`);
  video.Filter.Add(`hqdn3d=${Luma_spatial}:${Chroma_spatial}:${Luma_temp}:${Chroma_temp}`);
  return 1;
}
